_cdb_completion()
{
    #if [[ ${COMP_CWORD} -gt 1 ]]; then COMPREPLY=(); return 0; exit; fi

    opts=$(find  ~/.cd_bookmarks/ -type l -printf "%f ")
    cur="${COMP_WORDS[COMP_CWORD]}"

    COMPREPLY=( $(compgen -W "${opts}" -- ${cur}) )

    return 0
}

complete -F _cdb_completion "cdb"

function cdb() {
    USAGE="Usage: cdb [-c|-g|-d|-l] [bookmark]" ;
    if  [ ! -e ~/.cd_bookmarks ] ; then
        mkdir ~/.cd_bookmarks
    fi

    if [ -z "$1" ] ; then
        ll ~/.cd_bookmarks/
        return
    fi

    case $1 in
        # update script
        -u) wget -O ~/.cdb https://raw.githubusercontent.com/crazzywak/stuff/master/.cdb
            source ~/.cdb
            ;;
        # create bookmark
        -c) shift
            if [ ! -L ~/.cd_bookmarks/$1 ] ; then
                local current_dir=$(pwd)
                if [ ! -z "$2" ]; then current_dir=$(readlink -f $2); fi
                local bookmark_name=$1
                echo "Creating bookmark for '$current_dir' with name '$bookmark_name'..."
                ln -s $current_dir ~/.cd_bookmarks/$1 ;
            else
                echo "Looks like there is already a bookmark '$1'"
            fi
            ;;
        # delete bookmark
        -d) shift
            if [ -L ~/.cd_bookmarks/$1 ] ; then 
                rm ~/.cd_bookmarks/$1 ;
            else
                echo "Bookmark $1 doesn't exist." ;
            fi    
            ;;
        -e) shift
            echo "CDBOOKMARKS" > $1
            for f in ~/.cd_bookmarks/*
            do
                echo "$(basename $f),$(readlink $f)"
            done >>$1
            ;;
        -g) readlink -f ~/.cd_bookmarks/$2
            ;;
        -if) FORCE_IMPORT=1
            ;&
        -i) shift
            firstLine=1
            while read p || [[ -n $p ]]; do
                if [ $firstLine -eq 1 ]; then
                    if [ $p != "CDBOOKMARKS" ]; then
                        echo "Not a bookmarks file."
                        return
                    fi

                    firstLine=0
                    continue
                fi

                var1=$(echo $p | cut -f1 -d,)
                var2=$(echo $p | cut -f2 -d,)
                if [ -z "$FORCE_IMPORT" ] && [ -e ~/.cd_bookmarks/$var1 ]; then
                    echo "Bookmark $var1 already exists."
                else
                    echo "Importing $var1..."
                    ln -sf $var2 ~/.cd_bookmarks/$var1
                fi
            done <$1
            ;;
        # help
        -?) echo "$USAGE" ;
            ;;
        # goto bookmark
        *) if [ -e ~/.cd_bookmarks/$1 ] ; then 
                real_path=$(readlink -f ~/.cd_bookmarks/$1);
                if [ ! -z "$2" ]; then
                    $2 $real_path
                else
                    if [ -d $real_path ]; then
                        cd $real_path
                    else
                        vim $real_path
                    fi
                fi
            else
                echo "Bookmark $1 doesn't exist." ;
            fi
            ;;
    esac
}
